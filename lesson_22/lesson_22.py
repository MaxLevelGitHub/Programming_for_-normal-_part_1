"""–ó–∞–¥–∞–Ω–∏–µ 22 –†–∞–±–æ—Ç–∞ —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π. –ó–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –≤—Å–µ –ø–æ –ø–æ—Ä—è–¥–∫—É.
–ù–∞–ø–∏—à–∏—Ç–µ –¥–≤–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ü–µ—Ä–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç –ø–∞–ø–∫—É –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–∞. –î–∞–ª–µ–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –Ω–µ—ë —Ç—Ä–∏
—Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–∞ .txt, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–µ–ª–∏—á–∏–Ω, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö –ø–æ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–º—É –∑–∞–∫–æ–Ω—É, –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É –∑–∞–∫–æ–Ω—É –∏ –∑–∞–∫–æ–Ω—É ùúí^2 —Å 5 —Å—Ç–µ–ø–µ–Ω—è–º–∏ —Å–≤–æ–±–æ–¥—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏—â–∏—Ç–µ –≤ –ì–ª–∞–≤–µ 7, –ø—É–Ω–∫—Ç 7.3.
–ó–∞—Ç–µ–º –Ω–∞–ø–∏—à–∏—Ç–µ –≤—Ç–æ—Ä—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –ø–∞–ø–∫—É –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è,
–Ω–∞—Ö–æ–¥–∏—Ç –≤ –Ω–µ–π –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã, —Å—Ç—Ä–æ–∏—Ç –¥–ª—è –Ω–∏—Ö –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≥—Ä–∞—Ñ–∏–∫–∏ –≤ —Ñ–∞–π–ª—ã —Å —Ç–∞–∫–∏–º –∂–µ –Ω–∞–∑–≤–∞–Ω–∏–µ–º, –∫–∞–∫ –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª, –Ω–æ –¥—Ä—É–≥–∏–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º (.png, .jpg –∏–ª–∏ .pdf)."""

"""–ü—Ä–æ–≥—Ä–∞–º–º–∞ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏"""

# import os
# import random
# import numpy as np
# import matplotlib.pyplot as plt

# def generate_uniform(n):
#     """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç n —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª —Å —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω—ã–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º"""
#     return [random.uniform(0, 1) for _ in range(n)]

# def generate_normal(n):
#     """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç n —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª —Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º"""
#     return np.random.normal(loc=0, scale=1, size=n)

# def generate_chi_squared(n, df=5):
#     """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç n —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º ùúí^2 —Å df —Å—Ç–µ–ø–µ–Ω—è–º–∏ —Å–≤–æ–±–æ–¥—ã"""
#     return np.random.chisquare(df=df, size=n)

# def create_distribution_files(directory='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è'):
#     """–°–æ–∑–¥–∞—ë—Ç –ø–∞–ø–∫—É '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è', –µ—Å–ª–∏ –æ–Ω–∞ –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–∞,
#     –∑–∞—Ç–µ–º –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –Ω–µ—ë —Ñ–∞–π–ª—ã —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏"""
    
#     # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
#     if not os.path.exists(directory):
#         os.makedirs(directory)

#     # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π –≤ –∫–∞–∂–¥–æ–º —Ñ–∞–π–ª–µ
#     n = 1000

#     # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã
#     with open(os.path.join(directory, 'uniform.txt'), 'w') as f:
#         for value in generate_uniform(n):
#             f.write(str(value) + '\n')
    
#     with open(os.path.join(directory, 'normal.txt'), 'w') as f:
#         for value in generate_normal(n):
#             f.write(str(value) + '\n')

#     with open(os.path.join(directory, 'chi_squared.txt'), 'w') as f:
#         for value in generate_chi_squared(n):
#             f.write(str(value) + '\n')

# if __name__ == '__main__':
#     create_distribution_files()

"""–ü—Ä–æ–≥—Ä–∞–º–º–∞ 2: –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤"""

# import os
# import matplotlib.pyplot as plt

# def plot_histograms(directory='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è'):
#     """–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –ø–∞–ø–∫—É '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è', –Ω–∞—Ö–æ–¥–∏—Ç —Ñ–∞–π–ª—ã .txt,
#     —Å—Ç—Ä–æ–∏—Ç –¥–ª—è –Ω–∏—Ö –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≥—Ä–∞—Ñ–∏–∫–∏"""

#     # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É
#     os.chdir(directory)

#     # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ .txt
#     txt_files = [f for f in os.listdir() if f.endswith('.txt')]

#     # –°—Ç—Ä–æ–∏–º –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
#     for file in txt_files:
#         # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
#         data = []
#         with open(file, 'r') as f:
#             for line in f:
#                 data.append(float(line.strip()))

#         # –°—Ç—Ä–æ–∏–º –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É
#         plt.hist(data, bins=20)

#         # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
#         plt.title(f'–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è {file[:-4]}')
#         plt.xlabel('–ó–Ω–∞—á–µ–Ω–∏–µ')
#         plt.ylabel('–ß–∞—Å—Ç–æ—Ç–∞')

#         # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫
#         plt.savefig(file[:-4] + '.png')

#         # –û—á–∏—â–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
#         plt.clf()

# if __name__ == '__main__':
#     plot_histograms()