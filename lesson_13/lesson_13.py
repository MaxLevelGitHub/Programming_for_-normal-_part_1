"""–ó–∞–¥–∞–Ω–∏–µ 13 –í—ã–ø–æ–ª–Ω—è—Ç—å —Ç—Ä–∏ –∑–∞–¥–∞–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–æ–º–µ—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ
–≥—Ä—É–ø–ø—ã –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è ‚Ññm, ‚Ññm+5,
‚Ññm+10, m=(n-1)%5+1, –≥–¥–µ ùëõ ‚Äî –Ω–æ–º–µ—Ä –≤ —Å–ø–∏—Å–∫–µ –≥—Ä—É–ø–ø—ã."""

# n = 19 # –ø–æ –ø—Ä–µ–∂–Ω–µ–º—É –ú–∏—Ö–∞–π–ª–æ–≤
# m = (n - 1) % 5 + 1 # =4
# print(m, m+5, m+10) # =4, 9, 14

"""–ü—Ä–æ—Ç–∞–±—É–ª–∏—Ä—É–π—Ç–µ (–≤—ã—á–∏—Å–ª–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤
–Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö —Å –∑–∞–¥–∞–Ω–Ω—ã–º —à–∞–≥–æ–º) —Ñ—É–Ω–∫—Ü–∏–∏:
4. cos(2ùúãùë°) –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ ùë° ‚àà [‚àí10; 10] —Å —à–∞–≥–æ–º 1 –∏ —Å —à–∞–≥–æ–º 0.25;
9. ln(ùë• + 1) –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ ùë• ‚àà [0; ùëí ‚àí 1] —Å —à–∞–≥–æ–º 0.01 –∏ —Å —à–∞–≥–æ–º 0.001;
14. ‚àö3 ùë• –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ ùë• ‚àà [1; 125] —Å —à–∞–≥–æ–º 1 –∏ —Å —à–∞–≥–æ–º 5, –Ω–æ —Ç–∞–∫, —á—Ç–æ–±—ã –∑–Ω–∞—á–µ–Ω–∏—è 1 –∏ 5 –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–∏ —Å—Ä–µ–¥–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤;"""

# import numpy as np
# import math

# # cos(2œÄt) –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ t ‚àà [-10; 10]
# print("cos(2œÄt) –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ t ‚àà [-10; 10]:")

# # –®–∞–≥ 1
# t_values = np.arange(-10, 11, 1)
# cos_values = np.cos(2 * np.pi * t_values)
# print("–®–∞–≥ 1:")
# for i in range(len(t_values)):
#     print(f"t = {t_values[i]:.0f}, cos(2œÄt) = {cos_values[i]:.4f}")

# # –®–∞–≥ 0.25
# t_values = np.arange(-10, 11, 0.25)
# cos_values = np.cos(2 * np.pi * t_values)
# print("\n–®–∞–≥ 0.25:")
# for i in range(len(t_values)):
#     print(f"t = {t_values[i]:.2f}, cos(2œÄt) = {cos_values[i]:.4f}")

# # ln(x + 1) –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ x ‚àà [0; e - 1]
# print("\nln(x + 1) –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ x ‚àà [0; e - 1]:")

# # –®–∞–≥ 0.01
# x_values = np.arange(0, math.e - 1, 0.01)
# ln_values = np.log(x_values + 1)
# print("–®–∞–≥ 0.01:")
# for i in range(len(x_values)):
#     print(f"x = {x_values[i]:.2f}, ln(x + 1) = {ln_values[i]:.4f}")

# # –®–∞–≥ 0.001
# x_values = np.arange(0, math.e - 1, 0.001)
# ln_values = np.log(x_values + 1)
# print("\n–®–∞–≥ 0.001:")
# for i in range(len(x_values)):
#     print(f"x = {x_values[i]:.3f}, ln(x + 1) = {ln_values[i]:.4f}")

# # ‚àö3 x –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ x ‚àà [1; 125]
# print("\n‚àö3 x –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ x ‚àà [1; 125]:")

# # –®–∞–≥ 1 (–≤–∫–ª—é—á–∞—è 1)
# x_values = np.arange(1, 126, 1)
# sqrt3_values = np.sqrt(3) * x_values
# print("–®–∞–≥ 1 (–≤–∫–ª—é—á–∞—è 1):")
# for i in range(len(x_values)):
#     print(f"x = {x_values[i]:.0f}, ‚àö3 x = {sqrt3_values[i]:.4f}")

# # –®–∞–≥ 5 (–≤–∫–ª—é—á–∞—è 1 –∏ 5)
# x_values = np.arange(1, 126, 5)
# sqrt3_values = np.sqrt(3) * x_values
# print("\n–®–∞–≥ 5 (–≤–∫–ª—é—á–∞—è 1 –∏ 5):")
# for i in range(len(x_values)):
#     print(f"x = {x_values[i]:.0f}, ‚àö3 x = {sqrt3_values[i]:.4f}")