"""–ó–∞–¥–∞–Ω–∏–µ 29 –í—ã–ø–æ–ª–Ω—è—Ç—å –æ–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ —Å –Ω–æ–º–µ—Ä–æ–º (ùëõ ‚àí 1)%ùëö + 1, –≥–¥–µ ùëõ ‚Äî
–Ω–æ–º–µ—Ä –≤ —Å–ø–∏—Å–∫–µ –≥—Ä—É–ø–ø—ã, –∞ ùëö ‚Äî —á–∏—Å–ª–æ –∑–∞–¥–∞—á –≤ –∑–∞–¥–∞–Ω–∏–∏."""

# n = 19 # –ø–æ –ø—Ä–µ–∂–Ω–µ–º—É –ú–∏—Ö–∞–π–ª–æ–≤
# m = 4 # –∫–æ–ª-–≤–æ. –∑–∞–¥–∞–Ω–∏–π
# print((n - 1) % m + 1) # =3

"""–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –∏ –ø–æ—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–∏–æ–¥–æ–≥—Ä–∞–º–º—É ‚Äî –æ—Ü–µ–Ω–∫—É —Å–ø–µ–∫—Ç—Ä–∞ –º–æ—â–Ω–æ—Å—Ç–∏:
3. –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —à—É–º–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—ã–±–µ—Ä–∏—Ç–µ —Å–∞–º–∏;"""

# import numpy as np
# import matplotlib.pyplot as plt

# def calculate_periodogram(signal, fs):
#   """
#   –í—ã—á–∏—Å–ª—è–µ—Ç –ø–µ—Ä–∏–æ–¥–æ–≥—Ä–∞–º–º—É —Å–∏–≥–Ω–∞–ª–∞.

#   Args:
#     signal: –ú–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π —Å–∏–≥–Ω–∞–ª–∞.
#     fs: –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ —Å–∏–≥–Ω–∞–ª–∞.

#   Returns:
#     tuple: –ú–∞—Å—Å–∏–≤—ã —á–∞—Å—Ç–æ—Ç f, –∑–Ω–∞—á–µ–Ω–∏–π —Å–ø–µ–∫—Ç—Ä–∞–ª—å–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏ Pxx.
#   """

#   f, Pxx = plt.psd(signal, Fs=fs)
#   return f, Pxx

# if __name__ == '__main__':
#   # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —à—É–º–∞
#   mean = 0
#   std = 1
#   n = 1000  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –≤ —Å–∏–≥–Ω–∞–ª–µ
#   fs = 1000  # –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏

#   # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —à—É–º
#   noise = np.random.normal(loc=mean, scale=std, size=n)

#   # –í—ã—á–∏—Å–ª—è–µ–º –ø–µ—Ä–∏–æ–¥–æ–≥—Ä–∞–º–º—É
#   f, Pxx = calculate_periodogram(noise, fs)

#   # –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫ –ø–µ—Ä–∏–æ–¥–æ–≥—Ä–∞–º–º—ã
#   plt.figure(figsize=(8, 6))
#   plt.plot(f, Pxx)
#   plt.title('–ü–µ—Ä–∏–æ–¥–æ–≥—Ä–∞–º–º–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —à—É–º–∞')
#   plt.xlabel('–ß–∞—Å—Ç–æ—Ç–∞ (–ì—Ü)')
#   plt.ylabel('–°–ø–µ–∫—Ç—Ä–∞–ª—å–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å')
#   plt.grid(True)
#   plt.show()